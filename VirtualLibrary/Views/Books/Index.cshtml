@model IEnumerable<VirtualLibrary.Models.Book>

    @{
    ViewData["Title"] = "Books Library";
    }

    <h2 class="mb-4">@ViewData["Title"]</h2>

    <form method="get" class="row g-3 mb-4">
        <div class="col-md-4">
            <input type="text" name="searchTitle" value="@ViewContext.HttpContext.Request.Query["searchTitle"]" class="form-control" placeholder="Search by Title" />
        </div>
        <div class="col-md-4">
            <input type="text" name="searchAuthor" value="@ViewContext.HttpContext.Request.Query["searchAuthor"]" class="form-control" placeholder="Search by Author" />
        </div>
        <div class="col-md-3">
            <select name="searchGenre" class="form-select">
                <option value="">-- All Genres --</option>
                @{
                var selectedGenre = ViewContext.HttpContext.Request.Query["searchGenre"];
                var genres = Enum.GetValues(typeof(VirtualLibrary.Models.Genre));
                }

                @foreach (var genre in genres)
            {
                var isSelected = selectedGenre == genre.ToString() ? "selected" : "";
                @:<option value="@genre" @isSelected>@genre</option>
        }
            </select>
        </div>
        <div class="col-md-1">
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </div>
    </form>

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var book in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                @if (!string.IsNullOrEmpty(book.CoverImagePath))
                {
                <img src="@book.CoverImagePath" class="card-img-top" style="height: 320px; object-fit: cover; object-position: top;" alt="Cover" />

                }
                else
                {
                <img src="/images/placeholder-cover.jpg" class="card-img-top" style="height: 250px; object-fit: cover;" alt="No Cover" />
                }

            <div class="card-body d-flex flex-column">
                <h5 class="card-title">@book.Title</h5>
                <p class="card-text text-muted">@book.Author</p>
                <p class="card-text small">@book.Genre | @book.UploadDate.ToString("yyyy-MM-dd")</p>
                <p class="card-text small text-muted" style="min-height: 60px;" title="@book.Description">
                    @((book.Description?.Length > 100) ? book.Description.Substring(0, 100) + "..." : book.Description)
                </p>


                <div class="mt-auto d-flex flex-wrap gap-2">
                    <a class="btn btn-sm btn-primary" href="@book.FilePath" download>Download</a>
                    <a class="btn btn-sm btn-info" href="/Books/Details/@book.Id">Details</a>

                    @if (User.IsInRole("Admin"))
                        {
                    <a class="btn btn-sm btn-warning" href="/Books/Edit/@book.Id">Edit</a>
                    <form asp-action="Delete" asp-route-id="@book.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this book?');">
                            Delete
                        </button>
                    </form>
                        }
                </div>
            </div>
            </div>
        </div>
    }
    </div>


    @{
    var currentPage = (int)ViewBag.CurrentPage;
    var totalPages = (int)ViewBag.TotalPages;
    var searchTitle = ViewBag.SearchTitle ?? "";
    var searchAuthor = ViewBag.SearchAuthor ?? "";
    var searchGenre = ViewBag.SearchGenre?.ToString() ?? "";
    }
    <br />
    <nav>
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="?searchTitle=@searchTitle&searchAuthor=@searchAuthor&searchGenre=@searchGenre&page=@(currentPage - 1)">Previous</a>
            </li>
        }

            @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="?searchTitle=@searchTitle&searchAuthor=@searchAuthor&searchGenre=@searchGenre&page=@i">@i</a>
            </li>
        }

            @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="?searchTitle=@searchTitle&searchAuthor=@searchAuthor&searchGenre=@searchGenre&page=@(currentPage + 1)">Next</a>
            </li>
        }
        </ul>
    </nav>


    @if (User.IsInRole("Admin"))
{
    <a class="btn btn-success mt-3" href="/Books/Create">Add New Book</a>
}
